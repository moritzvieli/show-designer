{"__symbolic":"module","version":4,"metadata":{"DesignerService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ngInjectableDef":{}}},"DesignerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"lib-designer","template":"<!-- Wrap the whole component inside a div to encapsulate the CSS -->\n\n<!-- 100 % height minus the menu bar above and the gutter size of 13 px -->\n<!-- <div style=\"height: calc(100% - 33px)\"> -->\n<div id=\"designer\" [ngStyle]=\"{'height': 'calc(100% - ' + totalMenuHeightPx + 'px)'}\">\n\n  <!-- Navigation -->\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light border-secondary\"\n    style=\"border-bottom: 1px solid #444; height: 20px;\">\n\n    <!-- Menu buttons -->\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"fileDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n          aria-expanded=\"false\">\n          {{ 'designer.navigation.file' | translate }}\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"fileDropdown\">\n          <a class=\"dropdown-item\" href=\"#\"\n            (click)=\"projectOpen(); false;\">{{ 'designer.navigation.project-open' | translate }}</a>\n          <a class=\"dropdown-item\" href=\"#\"\n            (click)=\"projectSave(); false;\">{{ 'designer.navigation.project-save' | translate }}</a>\n          <a class=\"dropdown-item\" href=\"#\"\n            (click)=\"projectExport(); false;\">{{ 'designer.navigation.project-export' | translate }}</a>\n          <a class=\"dropdown-item\" href=\"#\"\n            (click)=\"projectClose(); false;\">{{ 'designer.navigation.project-close' | translate }}</a>\n        </div>\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"settingsDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n          aria-expanded=\"false\">\n          {{ 'designer.navigation.settings' | translate }}\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"settingsDropdown\">\n          <a class=\"dropdown-item\" href=\"#\"\n            (click)=\"openFixturePool(); false;\">{{ 'designer.navigation.fixture-pool' | translate }}</a>\n          <!-- <a class=\"dropdown-item\" href=\"#\">{{ 'designer.navigation.stage' | translate }}</a> -->\n        </div>\n      </li>\n      <li class=\"nav-item\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n        <a class=\"nav-link\" routerLink=\"/help\"\n          routerLinkActive=\"active\">{{ 'designer.navigation.help' | translate }}</a>\n      </li>\n    </ul>\n  </nav>\n\n  <!-- 100 % height minus the menu bar above and the gutter size of 13 px -->\n  <!-- <div style=\"height: calc(100% - 33px)\"> -->\n  <div class=\"h-100\">\n\n    <div id=\"row1\" class=\"split split-vertical clearfix pt-3 pl-3\">\n\n      <!-- Scenes -->\n      <div id=\"scenes\" class=\"split split-horizontal h-100\">\n        <app-scene></app-scene>\n      </div>\n\n      <!-- Presets -->\n      <div id=\"presets\" class=\"split split-horizontal h-100\">\n        <app-preset></app-preset>\n      </div>\n\n      <!-- 3D preview -->\n      <div id=\"preview\" class=\"split split-horizontal h-100 pr-3\">\n        <div class=\"card border-secondary h-100\">\n          <div class=\"card-body p-0 h-100\">\n            <app-preview class=\"h-100\"></app-preview>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n    <div id=\"row2\" class=\"split split-vertical clearfix px-3\">\n      <div id=\"capabilities\" class=\"split split-horizontal h-100\">\n\n        <div class=\"row h-100\">\n\n          <!-- Menu for the capabilities and effects-->\n          <div class=\"col col-auto pr-0\">\n            <div class=\"nav flex-column nav-pills\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n              <a class=\"nav-link px-3 active\" (click)=\"openTab('capabilities')\" id=\"v-pills-capabilities-tab\"\n                popover=\"{{ 'designer.misc.capabilities' | translate }}\" container=\"body\" placement=\"right\"\n                triggers=\"mouseenter:mouseleave\" data-toggle=\"pill\" href=\"#v-pills-capabilities\" role=\"tab\"\n                aria-controls=\"v-pills-capabilities\" aria-selected=\"true\">\n                <i class=\"fa fa-sliders fa-fw\" aria-hidden=\"true\" style=\"color: #fd7e14;\"></i>\n              </a>\n              <a class=\"nav-link px-3\" (click)=\"openTab('effects')\" id=\"v-pills-effects-tab\"\n                popover=\"{{ 'designer.misc.effects' | translate }}\" container=\"body\" placement=\"right\"\n                triggers=\"mouseenter:mouseleave\" data-toggle=\"pill\" href=\"#v-pills-effects\" role=\"tab\"\n                aria-controls=\"v-pills-effects\" aria-selected=\"false\">\n                <i class=\"fa fa-magic fa-fw\" aria-hidden=\"true\" style=\"color: #fd7e14;\"></i>\n              </a>\n              <a class=\"nav-link px-3\" (click)=\"openTab('settings')\" id=\"v-pills-settings-tab\"\n                popover=\"{{ 'designer.misc.settings' | translate }}\" container=\"body\" placement=\"right\"\n                triggers=\"mouseenter:mouseleave\" data-toggle=\"pill\" href=\"#v-pills-settings\" role=\"tab\"\n                aria-controls=\"v-pills-settings\" aria-selected=\"true\">\n                <i class=\"fa fa-cog fa-fw\" aria-hidden=\"true\"></i>\n              </a>\n            </div>\n          </div>\n\n          <!-- Content for the capabilities and effects -->\n          <div class=\"col pl-0\">\n            <div class=\"tab-content h-100\" id=\"v-pills-tabContent\">\n              <div class=\"tab-pane h-100 show active\" id=\"v-pills-capabilities\" role=\"tabpanel\"\n                aria-labelledby=\"v-pills-home-tab\">\n                <app-fixture-capability></app-fixture-capability>\n              </div>\n              <div class=\"tab-pane h-100\" id=\"v-pills-effects\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">\n                <app-effect></app-effect>\n              </div>\n              <div class=\"tab-pane h-100\" id=\"v-pills-settings\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\">\n                <app-fixture-settings></app-fixture-settings>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Fixtures -->\n      <div id=\"fixtures\" class=\"split split-horizontal h-100\">\n        <app-fixture></app-fixture>\n      </div>\n\n      <!-- Master dimmer -->\n      <div id=\"masterDimmer\" class=\"split split-horizontal h-100\">\n        <app-master-dimmer></app-master-dimmer>\n      </div>\n\n    </div>\n\n    <!-- Timeline -->\n    <div id=\"row3\" class=\"split split-vertical clearfix px-3 pb-3\" style=\"padding-bottom: 20px;\">\n      <app-timeline></app-timeline>\n    </div>\n\n  </div>\n\n</div>","styles":[".modal-full{max-width:unset!important;margin:1.75rem!important}.modal,.sticky-top{z-index:10001}#designer .navbar-nav{flex-direction:row!important}#designer .navbar-expand-lg{flex-flow:row nowrap!important;justify-content:flex-start!important}#designer .navbar-expand-lg .navbar-nav .nav-link{padding-right:.5rem!important;padding-left:.5rem!important}#designer :focus{outline:0}#designer select{font-size:.8rem;cursor:pointer}#designer input{font-size:.7rem;background-color:transparent;color:#fff;border:1px solid}#designer select{border-radius:0;-webkit-appearance:none;-moz-appearance:none;background-position:right 50%;background-repeat:no-repeat;background-image:url(/assets/designer/icons/caret-down-white.png);padding:4px;color:#fff;background-color:transparent}#designer input,#designer select{border-color:#dee2e6}#designer .list-group-item{padding:.3rem 1.25rem;border-left:none;border-right:none}#designer .nav-pills .nav-link.active,#designer .nav-pills .show>.nav-link{background-color:#444}#designer .nav a,#designer .panel-title .btn-link{color:#fff!important}#designer .accordion-toggle .btn,#designer .accordion-toggle button{padding:0}#designer .card-body{overflow:auto;padding:.8rem}#designer .card-header{margin-bottom:0;padding:.4rem}#designer .panel-body{background-color:#303030}#designer .list-group-item.active-light{background-color:#906542;border-color:#906542}#designer .inactive-list-item{opacity:.3}#designer span.bigcheck-target{font-family:FontAwesome}#designer input[type=checkbox].bigcheck{position:relative;left:-999em}#designer input[type=checkbox].bigcheck+span.bigcheck-target:after{content:\"\\f096\"}#designer input[type=checkbox].bigcheck:checked+span.bigcheck-target:after{content:\"\\f046\"}#designer .gutter.gutter-horizontal{cursor:ew-resize}#designer .gutter.gutter-vertical{cursor:ns-resize}#designer .gutter.gutter-horizontal,#designer .split-horizontal{float:left}#designer .gutter.gutter-horizontal,#designer .split-vertical{height:100%}#designer .split{overflow-y:hidden;overflow-x:hidden}#designer .panel{background-color:transparent}#designer .slider-horizontal .slider-track{height:2px!important;margin-top:-2px!important}#designer .slider-vertical .slider-track{width:2px!important;margin-left:4px!important}#designer .slider-selection,#designer .slider-track,#designer .slider-track-high,#designer .slider-track-low{background-color:#fff!important;border-radius:0!important;background-image:none!important;box-shadow:none!important}#designer .slider-handle{width:13px!important;height:13px!important;background-color:#fff!important;background-image:none!important;border:1px solid #303030}#designer .slider-vertical .slider-handle{margin-left:4px!important}#designer .slider-input{width:35px;margin-left:8px;text-align:center}#designer .capability-container{padding:0!important;height:0}#designer accordion-group>div{border:none!important}#designer .popover{background-color:#fff}#designer .popover-body{color:#000}#designer .bs-popover-auto[x-placement^=right] .arrow::after,#designer .bs-popover-right .arrow::after{border-right-color:#fff}#designer .bs-popover-auto[x-placement^=left] .arrow::after,#designer .bs-popover-left .arrow::after{border-left-color:#fff}#designer .bs-popover-auto[x-placement^=bottom] .arrow::after,#designer .bs-popover-bottom .arrow::after{border-bottom-color:#fff}#designer .bs-popover-auto[x-placement^=top] .arrow::after,#designer .bs-popover-top .arrow::after{border-top-color:#fff}#designer .iro__slider,#designer .iro__wheel{cursor:pointer}#designer .pan-tilt-grid path{fill:none;stroke:#fff;stroke-width:10px}#designer .pan-tilt-grid circle{fill:#4682b4;stroke:#fff;stroke-width:3px}#designer .capability{overflow:visible}#designer .capability-deactivated{opacity:.4}#designer .wavesurfer-region{z-index:5!important}#designer .wavesurfer-region[data-region-selected=true]{z-index:6!important}#designer .wavesurfer-region[data-region-preset=true]{height:50%!important;top:50%!important}#designer .wavesurfer-region[data-region-name]:after{content:attr(data-region-name);margin-left:20px}#designer .wavesurfer-handle{width:10px!important;max-width:10px!important;border:1px solid #ddd;background:rgba(0,0,0,.1);box-sizing:border-box;opacity:0;cursor:unset!important}#designer .wavesurfer-handle-end{margin-left:-10px}#designer .wavesurfer-region[data-region-selectable=true] .wavesurfer-handle{opacity:1;cursor:col-resize!important}#designer .wavesurfer-handle:after,#designer .wavesurfer-handle:before{content:\"\";display:block;position:absolute;z-index:1;border-top:1px solid #fff;border-bottom:1px solid #fff;height:4px;left:5%;right:5%;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}#designer .wavesurfer-handle:before{margin-top:-3px}#designer timeline{overflow:scroll!important;overflow:-moz-scrollbars-none;-ms-overflow-style:none;scrollbar-width:none}#designer timeline::-webkit-scrollbar{height:0!important}#designer cursor{top:-20px!important}#designer wave{border-right-color:#fd7e14!important}"],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":155,"character":17},"member":"None"}}]}],"members":{"menuHeightPx":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":161,"character":3}}]}],"externalCompositionsAvailable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":167,"character":3}}]}],"previewComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":181,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵa"}]}]}],"timelineComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":184,"character":3},"arguments":[{"__symbolic":"reference","name":"ɵn"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":188,"character":30},{"__symbolic":"reference","module":"ngx-bootstrap","name":"BsModalService","line":189,"character":26},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵg"}]}],"calcTotalMenuHeight":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"openTab":[{"__symbolic":"method"}],"openFixturePool":[{"__symbolic":"method"}],"projectOpen":[{"__symbolic":"method"}],"projectClose":[{"__symbolic":"method"}],"projectSave":[{"__symbolic":"method"}],"projectExport":[{"__symbolic":"method"}]}},"DesignerModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":27,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"DesignerComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵz"},{"__symbolic":"reference","name":"ɵba"},{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","name":"ɵbd"}],"imports":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule","line":49,"character":4},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":50,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":51,"character":4},{"__symbolic":"reference","module":"ngx-bootstrap-slider","name":"NgxBootstrapSliderModule","line":52,"character":4},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateModule","line":53,"character":4},{"__symbolic":"reference","module":"ngx-bootstrap","name":"AccordionModule","line":54,"character":4},{"__symbolic":"reference","module":"ngx-bootstrap","name":"PopoverModule","line":55,"character":4},{"__symbolic":"reference","module":"ngx-bootstrap","name":"TypeaheadModule","line":56,"character":4},{"__symbolic":"reference","module":"angular-sortablejs","name":"SortablejsModule","line":57,"character":4}],"entryComponents":[{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","name":"ɵbd"}],"exports":[{"__symbolic":"reference","name":"DesignerComponent"}]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"app-preview","template":"<div class=\"h-100\" #canvas style=\"overflow: hidden;\"></div>","styles":[""]}]}],"members":{"canvasRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":43,"character":3},"arguments":["canvas"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵc"}]}],"syncFixtures":[{"__symbolic":"method"}],"render":[{"__symbolic":"method"}],"updateStagePosition":[{"__symbolic":"method"}],"animate":[{"__symbolic":"method"}],"getAspectRatio":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":166,"character":3},"arguments":["window:resize"]}]}],"setupRenderer":[{"__symbolic":"method"}],"setupCamera":[{"__symbolic":"method"}],"setupControls":[{"__symbolic":"method"}],"setupFloor":[{"__symbolic":"method"}],"setupStage":[{"__symbolic":"method"}],"setupStats":[{"__symbolic":"method"}],"setupScene":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":16,"character":18},{"__symbolic":"reference","name":"ɵc"}]}],"getFixtureByUuid":[{"__symbolic":"method"}],"getSearchTemplates":[{"__symbolic":"method"}],"getTemplateByUuid":[{"__symbolic":"method"}],"loadTemplateByUuid":[{"__symbolic":"method"}],"getTemplateByFixture":[{"__symbolic":"method"}],"getModeByFixture":[{"__symbolic":"method"}],"getChannelsByFixture":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":16,"character":18}]}],"save":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"getUuid":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"loadScene":[{"__symbolic":"method"}],"loadMesh":[{"__symbolic":"method"}],"getMesh":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ngInjectableDef":{}}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":18,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵc"}]}],"getAlreadyCalculatedFixture":[{"__symbolic":"method"}],"getPresets":[{"__symbolic":"method"}],"capabilityValuesEqual":[{"__symbolic":"method"}],"mixCapabilityValue":[{"__symbolic":"method"}],"getFixtureIndex":[{"__symbolic":"method"}],"getFixturePropertyValues":[{"__symbolic":"method"}],"setUniverseValues":[{"__symbolic":"method"}],"fixtureIsSelected":[{"__symbolic":"method"}],"updateFixtureSetup":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵc"}]}],"getPresetByUuid":[{"__symbolic":"method"}],"fixtureIsSelected":[{"__symbolic":"method"}],"switchFixtureSelection":[{"__symbolic":"method"}],"capabilityValueMatchesTypeAndOptions":[{"__symbolic":"method"}],"deleteCapabilityValue":[{"__symbolic":"method"}],"setCapabilityValue":[{"__symbolic":"method"}],"getCapabilityValue":[{"__symbolic":"method"}],"selectPreset":[{"__symbolic":"method"}],"addPreset":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":3,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ngInjectableDef":{}}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵc"}]}],"sceneIsSelected":[{"__symbolic":"method"}],"presetIsSelected":[{"__symbolic":"method"}],"switchSceneSelection":[{"__symbolic":"method"}],"selectScene":[{"__symbolic":"method"}],"addScene":[{"__symbolic":"method"}],"getSceneByUuid":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":17,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":61,"character":18}]}],"pad":[{"__symbolic":"method"}],"msToTime":[{"__symbolic":"method"}],"updateCurrentTime":[{"__symbolic":"method"}],"startTimeUpdater":[{"__symbolic":"method"}],"stopTimeUpdater":[{"__symbolic":"method"}],"formatTimeCallback":[{"__symbolic":"method"}],"timeInterval":[{"__symbolic":"method"}],"primaryLabelInterval":[{"__symbolic":"method"}],"secondaryLabelInterval":[{"__symbolic":"method"}],"seeekWithTimeline":[{"__symbolic":"method"}],"applyZoom":[{"__symbolic":"method"}],"isWaveSurferReady":[{"__symbolic":"method"}],"addRegion":[{"__symbolic":"method"}],"createWaveSurfer":[{"__symbolic":"method"}],"hexToRgb":[{"__symbolic":"method"}],"updateRegionSelection":[{"__symbolic":"method"}],"setSelectedRegion":[{"__symbolic":"method"}],"connectRegion":[{"__symbolic":"method"}],"drawRegion":[{"__symbolic":"method"}],"removeRegion":[{"__symbolic":"method"}],"getPresetsInTime":[{"__symbolic":"method"}],"drawAllRegions":[{"__symbolic":"method"}],"updateGrid":[{"__symbolic":"method"}],"getExternalCompositionNames":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":3,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"getUniverseByUuid":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ngInjectableDef":{}}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"app-timeline","template":"<div class=\"card border-secondary h-100\">\n  <div class=\"card-body h-100 d-flex\" style=\"flex-flow: column; overflow: unset;\">\n\n    <div class=\"d-flex pb-3\">\n      <div class=\"btn-group mr-3 my-auto\" role=\"group\" style=\"float: left;\">\n        <a href=\"#\" class=\"btn btn-primary m-0 p-1 mr-3\" (click)=\"addComposition(); false;\"><i\n            class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i></a>\n        <select class=\"custom-select mr-3\"\n          [ngModel]=\"timelineService.selectedCompositionIndex\" (ngModelChange)=\"selectComposition($event)\"\n          style=\"width: 150px; height: 30px;\">\n          <option *ngFor=\"let composition of projectService.project.compositions; let i = index;\" [value]=\"i\">\n            {{ composition.name }}\n          <option *ngIf=\"projectService.project.compositions.length == 0\" [value]=\"0\">\n            - {{ 'designer.timeline.no-compositions' | translate }} -\n          </option>\n        </select>\n        <a href=\"#\" class=\"btn btn-primary m-0 p-1\" (click)=\"rewind(); false;\"><i class=\"fa fa-step-backward fa-fw\"\n            aria-hidden=\"true\"></i></a>\n        <a *ngIf=\"timelineService.playState == 'paused'\" href=\"#\" class=\"btn btn-primary m-0 p-1\"\n          (click)=\"play(); false;\"><i class=\"fa fa-play fa-fw\" aria-hidden=\"true\"></i></a>\n        <a *ngIf=\"timelineService.playState == 'playing'\" href=\"#\" class=\"btn btn-primary m-0 p-1\"\n          (click)=\"pause(); false;\"><i class=\"fa fa-pause fa-fw\" aria-hidden=\"true\"></i></a>\n      </div>\n\n      <div class=\"my-auto mr-3\">\n        <span\n          style=\"width: 78px; text-align: left; display: inline-block; margin-left: 5px;\">{{ timelineService.currentTime }}</span>\n        <span style=\"display: inline-block;\"></span>- {{ timelineService.duration }}\n      </div>\n\n      <div class=\"my-auto mr-3 ml-auto\" style=\"float: left;\">\n        <i (click)=\"timelineService.applyZoom(timelineService.zoom - 20)\" class=\"fa fa-search-minus mr-3\"\n          aria-hidden=\"true\"></i>\n        <mv-slider style=\"width: 80px;\" [tooltip]=\"'hide'\" [value]=\"timelineService.zoom\" [min]=\"0\" [max]=\"200\"\n          [step]=\"20\" (change)=\"timelineService.applyZoom($event.newValue)\"></mv-slider>\n        <i (click)=\"timelineService.applyZoom(timelineService.zoom + 20)\" class=\"fa fa-search-plus ml-3\"\n          aria-hidden=\"true\"></i>\n      </div>\n\n      <div class=\"my-auto mr-3\">\n        <input type=\"text\" [value]=\"timelineService.selectedPlaybackRegion?.startMillis\"> - <input type=\"text\"\n          [value]=\"timelineService.selectedPlaybackRegion?.endMillis\">\n      </div>\n\n      <a href=\"#\" class=\"btn btn-secondary m-0 py-1 mr-3\" (click)=\"openGridSettings(); false;\"\n        popover=\"{{ 'designer.timeline.grid' | translate }}\" container=\"body\" placement=\"left\"\n        triggers=\"mouseenter:mouseleave\"><i class=\"fa fa-th\" aria-hidden=\"true\"></i></a>\n\n      <a href=\"#\" class=\"btn btn-secondary m-0 py-1 mr-3\" (click)=\"removeRegion(); false;\"\n        popover=\"{{ 'designer.timeline.remove-region' | translate }}\" container=\"body\" placement=\"left\"\n        triggers=\"mouseenter:mouseleave\"><i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i></a>\n\n      <a href=\"#\" class=\"btn btn-secondary m-0 py-1 mr-3\" (click)=\"addRegion(); false;\"\n        popover=\"{{ 'designer.timeline.add-region' | translate }}\" container=\"body\" placement=\"left\"\n        triggers=\"mouseenter:mouseleave\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></a>\n\n      <a href=\"#\" class=\"btn btn-secondary m-0 py-1 mr-3\" (click)=\"removeComposition(); false;\"\n        popover=\"{{ 'designer.timeline.remove-composition' | translate }}\" container=\"body\" placement=\"left\"\n        triggers=\"mouseenter:mouseleave\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></a>\n\n      <a href=\"#\" class=\"btn btn-secondary m-0 py-1\" (click)=\"compositionSettings(); false;\"\n        popover=\"{{ 'designer.timeline.composition-settings' | translate }}\" container=\"body\" placement=\"left\"\n        triggers=\"mouseenter:mouseleave\"><i class=\"fa fa-cog\" aria-hidden=\"true\"></i></a>\n    </div>\n\n    <div>\n      <div id=\"waveform-timeline\"> </div>\n    </div>\n    <div #waveWrapper style=\"flex: 2; position: relative;\">\n      <div id=\"waveform\"></div>\n    </div>\n\n  </div>\n</div>","styles":[""]}]}],"members":{"waveWrapper":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":89,"character":3},"arguments":["waveWrapper"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":94,"character":31},{"__symbolic":"reference","module":"ngx-bootstrap","name":"BsModalService","line":95,"character":26},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵc"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":114,"character":3},"arguments":["window:resize"]}]}],"play":[{"__symbolic":"method"}],"pause":[{"__symbolic":"method"}],"rewind":[{"__symbolic":"method"}],"addRegion":[{"__symbolic":"method"}],"removeRegion":[{"__symbolic":"method"}],"openGridSettings":[{"__symbolic":"method"}],"removeComposition":[{"__symbolic":"method"}],"openCompositionSettings":[{"__symbolic":"method"}],"compositionSettings":[{"__symbolic":"method"}],"addComposition":[{"__symbolic":"method"}],"selectComposition":[{"__symbolic":"method"}],"handleKeyboardEvent":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":201,"character":3},"arguments":["document:keydown",["$event"]]}]}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-effect-curve","template":"<div class=\"mr-3\" style=\"float: left\">\n  <canvas #curveGrid class=\"curve-grid\" width=\"200\" height=\"100\" viewBox=\"150 -75 4850 5150\" preserveAspectRatio=\"none\"></canvas>\n</div>\n\n<div class=\"mr-4\" style=\"float: left\">\n  <div class=\"d-flex\">\n    <div class=\"my-auto\" style=\"width: 100px; float: left;\">\n      Length\n    </div>\n    <div class=\"my-auto\" style=\"float: left;\">\n      <mv-slider (change)=\"redraw()\" [(value)]=\"curve.lengthMillis\" style=\"width: 80px;\" [tooltip]=\"'hide'\" [value]=\"0\" [min]=\"500\"\n        [max]=\"2500\" [step]=\"1\"></mv-slider>\n    </div>\n    <div class=\"my-auto\">\n      <input type=\"text\" class=\"slider-input\" [(ngModel)]=\"curve.lengthMillis\">\n    </div>\n  </div>\n\n  <div class=\"d-flex\">\n    <div class=\"my-auto\" style=\"width: 100px; float: left;\">\n      Amplitude\n    </div>\n    <div class=\"my-auto\" style=\"float: left;\">\n      <mv-slider (change)=\"redraw()\" [(value)]=\"curve.amplitude\" style=\"width: 80px;\" [tooltip]=\"'hide'\" [min]=\"0\" [max]=\"255\"\n        [step]=\"1\"></mv-slider>\n    </div>\n    <div class=\"my-auto\">\n      <input type=\"text\" class=\"slider-input\" [(ngModel)]=\"curve.amplitude\">\n    </div>\n  </div>\n\n  <div class=\"d-flex\">\n    <div class=\"my-auto\" style=\"width: 100px; float: left;\">\n      Position\n    </div>\n    <div class=\"my-auto\" style=\"float: left;\">\n      <mv-slider (change)=\"redraw()\" [(value)]=\"curve.position\" style=\"width: 80px; height: 18px;\" [tooltip]=\"'hide'\" [min]=\"-255\" [max]=\"255\" [step]=\"1\"></mv-slider>\n    </div>\n    <div class=\"my-auto\">\n      <input type=\"text\" class=\"slider-input\" [(ngModel)]=\"curve.position\">\n    </div>\n  </div>\n\n  <div class=\"d-flex\">\n    <div class=\"my-auto\" style=\"width: 100px; float: left;\">\n      Phase\n    </div>\n    <div class=\"my-auto\" style=\"float: left;\">\n      <mv-slider (change)=\"redraw()\" [(value)]=\"curve.phaseMillis\" style=\"width: 80px; height: 18px;\" [tooltip]=\"'hide'\" [min]=\"-1000\" [max]=\"1000\" [step]=\"1\"></mv-slider>\n    </div>\n    <div class=\"my-auto\">\n      <input type=\"text\" class=\"slider-input\" [(ngModel)]=\"curve.phaseMillis\">\n    </div>\n  </div>\n\n  <div class=\"d-flex\">\n    <div class=\"my-auto\" style=\"width: 100px; float: left;\">\n      Chase\n    </div>\n    <div class=\"my-auto\" style=\"float: left;\">\n      <mv-slider (change)=\"redraw()\" [(value)]=\"curve.phasingMillis\" style=\"width: 80px; height: 18px;\" [tooltip]=\"'hide'\" [min]=\"0\"\n        [max]=\"700\" [step]=\"1\"></mv-slider>\n    </div>\n    <div class=\"my-auto\">\n      <input type=\"text\" class=\"slider-input\" [(ngModel)]=\"curve.phasingMillis\">\n    </div>\n  </div>\n</div>\n\n<div class=\"h-100 p-2\" style=\"overflow-y: scroll; width: 180px; height: 110px !important; background-color: #222; border: 1px solid white;\">\n  <div *ngFor=\"let channel of channels\" class=\"form-check\">\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"channel_{{ curve?.uuid + '_' + channel }}\" (change)=\"toggleChannel($event, channel)\">\n    <label class=\"form-check-label\" for=\"channel_{{ curve?.uuid + '_' + channel }}\">{{ channel }}</label>\n  </div>\n</div>","styles":[".curve-grid{background-color:#000;border:1px solid #fff}"]}]}],"members":{"curve":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":95,"character":3}}]}],"isSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":98,"character":3}}]}],"curveGrid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":115,"character":3},"arguments":["curveGrid"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵf"}]}],"ngOnInit":[{"__symbolic":"method"}],"drawCurrentValue":[{"__symbolic":"method"}],"redraw":[{"__symbolic":"method"}],"toggleChannel":[{"__symbolic":"method"}]}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"app-effect-pan-tilt","template":"<svg #panTiltGrid class=\"pan-tilt-grid\" width=\"150\" height=\"150\" viewBox=\"-100 -100 1200 1200\" style=\"border: 1px solid white;\"></svg>","styles":[""]}]}],"members":{"panTiltGrid":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":11,"character":3},"arguments":["panTiltGrid"]}]}],"__ctor__":[{"__symbolic":"constructor"}],"redraw":[{"__symbolic":"method"}],"translateAlong":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"app-scene","template":"<div class=\"card border-secondary panel h-100\">\n  <div class=\"card-header d-flex\">\n    <div>\n      {{ 'designer.scene.title' | translate }}\n    </div>\n    <div class=\"ml-auto\">\n      <a href=\"#\" class=\"btn btn-secondary m-0, p-0\" [class.text-primary]=\"sceneService.multipleSelection == true\"\n        (click)=\"sceneService.multipleSelection = !sceneService.multipleSelection; false;\"><i class=\"fa fa-object-group fa-fw\"\n          aria-hidden=\"true\"></i></a>\n      <a href=\"#\" class=\"btn btn-secondary m-0, p-0\" (click)=\"removeScene(); false;\"><i class=\"fa fa-minus-circle fa-fw\"\n          aria-hidden=\"true\"></i></a>\n      <a href=\"#\" class=\"btn btn-secondary m-0, p-0\" (click)=\"sceneService.addScene(); false;\"><i\n          class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i></a>\n    </div>\n  </div>\n  <div class=\"card-body border-secondary p-0\">\n\n    <!-- List of scenes -->\n    <div class=\"list-group\" [sortablejs]=\"projectService.project.scenes\">\n      <div *ngFor=\"let scene of projectService.project.scenes; let i = index\"\n        class=\"list-group-item\"\n        [class.active-light]=\"presetService.previewPreset && sceneService.sceneIsSelected(scene)\"\n        [class.active]=\"!presetService.previewPreset && sceneService.sceneIsSelected(scene)\">\n        <div class=\"row d-flex\" (click)=\"selectScene($event, i)\" style=\"cursor: pointer;\">\n          <div class=\"col-auto list-sort-handle my-auto\" style=\"cursor: move; cursor: -webkit-grabbing;\">\n            <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"my-auto\">\n            {{ scene.name }}\n          </div>\n          <div class=\"my-auto ml-auto mr-2 d-flex\">\n            <svg class=\"my-auto\" height=\"20\" width=\"20\">\n              <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"white\" stroke-width=\"1\" [attr.fill]=\"scene.color\" />\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵc"}]}],"ngOnInit":[{"__symbolic":"method"}],"selectScene":[{"__symbolic":"method"}],"removeScene":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"app-fixture-capability-color","template":"<div class=\"card border-secondary h-100\" [class.capability-deactivated]=\"!active\">\n  <div class=\"card-header\">\n    <div class=\"my-auto\" style=\"float: left;\">\n      <div class=\"form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"capabilityColorActive\" [ngModel]=\"active\" (ngModelChange)=\"changeActive($event)\">\n        <label class=\"form-check-label\" for=\"capabilityColorActive\">Color</label>\n      </div>\n    </div>\n    <div class=\"pull-right\">\n      <input type=\"text\" [(ngModel)]=\"color\"\n        style=\"width: 58px; text-align: center; font-size: 12px; font-family: monospace;\">\n    </div>\n  </div>\n\n  <div class=\"card-body h-100\">\n\n    <div id=\"color-picker-container\"></div>\n\n  </div>\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵh"}]}],"ngOnInit":[{"__symbolic":"method"}],"updateFixtureColor":[{"__symbolic":"method"}],"changeActive":[{"__symbolic":"method"}],"changeColor":[{"__symbolic":"method"}]}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-fixture","template":"<div class=\"card border-secondary h-100 panel\">\n  <div class=\"card-header d-flex\">\n    <div>\n      Fixtures\n    </div>\n    <div class=\"ml-auto\">\n      <a href=\"#\" class=\"btn btn-secondary m-0, p-0\" (click)=\"selectNone(); false;\"><i class=\"fa fa-square-o fa-fw\"\n          aria-hidden=\"true\"></i></a>\n      <a href=\"#\" class=\"btn btn-secondary m-0, p-0\" (click)=\"selectAll(); false;\"><i class=\"fa fa-check-square-o fa-fw\"\n          aria-hidden=\"true\"></i></a>\n      <a href=\"#\" class=\"btn btn-secondary m-0, p-0\" (click)=\"openFixturePool(); false;\"><i class=\"fa fa-cog fa-fw\"\n          aria-hidden=\"true\"></i></a>\n    </div>\n  </div>\n\n  <div class=\"card-body h-100 p-0\">\n\n    <!-- List of fixtures -->\n    <div *ngIf=\"presetService.selectedPreset\" class=\"list-group\" [sortablejs]=\"projectService.project.fixtures\">\n      <div class=\"list-group-item\" *ngFor=\"let item of projectService.project.fixtures\"\n        [class.inactive-list-item]=\"!presetService.fixtureIsSelected(item)\">\n        <div class=\"row d-flex\" (click)=\"selectFixture($event, item)\" style=\"cursor: pointer;\">\n          <div class=\"col-auto list-sort-handle my-auto\" style=\"cursor: move; cursor: -webkit-grabbing;\">\n            <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"active\"\n              [ngModel]=\"presetService.fixtureIsSelected(item)\">\n          </div>\n          <div>\n            {{ item.name }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","module":"ngx-bootstrap","name":"BsModalService","line":54,"character":26}]}],"ngOnInit":[{"__symbolic":"method"}],"deleteFixture":[{"__symbolic":"method"}],"selectFixture":[{"__symbolic":"method"}],"selectAll":[{"__symbolic":"method"}],"selectNone":[{"__symbolic":"method"}],"openFixturePool":[{"__symbolic":"method"}]}},"ɵt":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"app-fixture-settings-position","template":"<div class=\"card border-secondary h-100\">\n  <div class=\"card-header\">\n    Position\n  </div>\n\n  <div class=\"card-body h-100\">\n    <div>\n      <select class=\"mb-2\" style=\"width: 140px;\" [(ngModel)]=\"selectedPositioning\" (change)=\"changePosition($event.target.value)\">\n        <option value=\"topFront\">Front Top</option>\n        <option value=\"bottomFront\">Front Bottom</option>\n        <option value=\"topBack\">Back Top</option>\n        <option value=\"bottomBack\">Back Bottom</option>\n        <option value=\"manual\">Manual</option>\n      </select>\n    </div>\n\n    <div *ngIf=\"selectedPositioning == 'manual'\">\n      <div class=\"d-flex\">\n        <div class=\"my-auto\" style=\"width: 17px; float: left;\">\n          X\n        </div>\n        <div class=\"my-auto\" style=\"float: left;\">\n          <mv-slider style=\"width: 80px;\" [tooltip]=\"'hide'\" [value]=\"0\" [min]=\"-3\" [max]=\"3\" [step]=\"0.001\" (change)=\"changeSlider($event)\"></mv-slider>\n        </div>\n        <div class=\"my-auto\">\n          <input type=\"text\" class=\"slider-input\">\n        </div>\n      </div>\n\n      <div class=\"d-flex\">\n        <div class=\"my-auto\" style=\"width: 17px; float: left;\">\n          Y\n        </div>\n        <div class=\"my-auto\" style=\"float: left;\">\n          <mv-slider style=\"width: 80px;\" [tooltip]=\"'hide'\" [value]=\"0\" [min]=\"-3\" [max]=\"3\" [step]=\"0.001\" (change)=\"changeSlider($event)\"></mv-slider>\n        </div>\n        <div class=\"my-auto\">\n          <input type=\"text\" class=\"slider-input\">\n        </div>\n      </div>\n\n      <div class=\"d-flex\">\n        <div class=\"my-auto\" style=\"width: 17px; float: left;\">\n          Z\n        </div>\n        <div class=\"my-auto\" style=\"float: left;\">\n          <mv-slider style=\"width: 80px; height: 18px;\" [tooltip]=\"'hide'\" [value]=\"0\" [min]=\"-3\" [max]=\"3\" [step]=\"0.001\"\n            (change)=\"changeSlider($event)\"></mv-slider>\n        </div>\n        <div class=\"my-auto\">\n          <input type=\"text\" class=\"slider-input\">\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"}]}],"ngOnInit":[{"__symbolic":"method"}],"changePosition":[{"__symbolic":"method"}],"changeSlider":[{"__symbolic":"method"}]}},"ɵu":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"app-fixture-capability","template":"<div class=\"card border-secondary panel h-100\">\n  <div class=\"card-body capability-container\">\n\n    <div *ngIf=\"presetService.selectedPreset\" class=\"row m-0\">\n\n      <!-- Dimmer -->\n      <div class=\"col col-auto p-0 my-3 ml-3 mr-3\">\n        <app-fixture-capability-dimmer></app-fixture-capability-dimmer>\n      </div>\n\n      <!-- Color -->\n      <div class=\"col col-auto p-0 my-3 mr-3\">\n        <app-fixture-capability-color></app-fixture-capability-color>\n      </div>\n\n    </div>\n\n  </div>\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵh"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵv":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"app-fixture-settings","template":"<div class=\"card border-secondary panel h-100\">\n  <div class=\"card-body capability-container\">\n\n    <div class=\"row m-0\">\n\n      <!-- Position -->\n      <div class=\"col col-auto p-0 my-3 ml-3 mr-3\">\n        <app-fixture-settings-position></app-fixture-settings-position>\n      </div>\n\n    </div>\n\n  </div>\n</div>","styles":[".dmx-channel{display:flex;float:left;width:28px;border:1px solid #fff;margin-left:-1px;margin-bottom:-1px}.dmx-channel-occupied{background-color:#fd7e14;border-left:none;border-right:none;cursor:move}.dmx-channel-occupied-start{border-left:1px solid #fff}.dmx-channel-occupied-end{border-right:1px solid #fff}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵw":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"app-effect","template":"<div class=\"card border-secondary panel h-100\">\n  <div class=\"card-body capability-container\" *ngIf=\"presetService.selectedPreset\">\n\n    <div class=\"m-3\">\n      <accordion [closeOthers]=\"true\">\n        <accordion-group *ngFor=\"let item of presetService.selectedPreset.effects; let i = index\"\n          [isOpen]=\"effectService.selectedEffect == item\" (isOpenChange)=\"openEffect(item, $event)\"\n          style=\"margin-top: 1px;\">\n\n          <button class=\"btn btn-link btn-block clearfix\" accordion-heading>\n            <div class=\"pull-left float-left d-flex w-100\">\n              <i *ngIf=\"item.constructor.name == 'EffectCurve'\" class=\"fa fa-area-chart fa-fw my-auto\" aria-hidden=\"true\"></i>\n              <i *ngIf=\"item.constructor.name == 'EffectPanTilt'\" class=\"fa fa-arrows-alt fa-fw my-auto\" aria-hidden=\"true\"></i>\n              <span class=\"ml-2\">{{ item.constructor.name }}</span>\n              <div class=\"ml-auto mr-2\">\n                <i *ngIf=\"item == effectService.selectedEffect\" class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                <i *ngIf=\"item != effectService.selectedEffect\" class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>\n              </div>\n            </div>\n          </button>\n\n          <div *ngIf=\"item.constructor.name == 'EffectCurve'\">\n            <app-effect-curve [curve]=\"item\" [isSelected]=\"item == effectService.selectedEffect\"></app-effect-curve>\n          </div>\n\n          <div *ngIf=\"item.constructor.name == 'EffectPanTilt'\">\n            <app-effect-pan-tilt></app-effect-pan-tilt>\n          </div>\n\n        </accordion-group>\n      </accordion>\n\n      <div class=\"d-flex mx-auto mt-3\">\n        <div class=\"dropdown show d-flex\">\n          <a class=\"btn btn-secondary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\"\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add new effect\n          </a>\n\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n            <a class=\"dropdown-item\" href=\"#\" (click)=\"addCurveEffect(); false;\">\n              <i class=\"fa fa-area-chart fa-fw\" aria-hidden=\"true\"></i> Curve</a>\n            <!-- <a class=\"dropdown-item\" href=\"#\" (click)=\"addPanTiltEffect()\">\n              <i class=\"fa fa-arrows-alt fa-fw\" aria-hidden=\"true\"></i> Pan/Tilt</a> -->\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵb"}]}],"ngOnInit":[{"__symbolic":"method"}],"addEffect":[{"__symbolic":"method"}],"addCurveEffect":[{"__symbolic":"method"}],"addPanTiltEffect":[{"__symbolic":"method"}],"openEffect":[{"__symbolic":"method"}]}},"ɵx":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"app-fixture-pool","template":"<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ 'designer.fixture-pool.title' | translate }}</h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <!-- Create a new template -->\n      <a class=\"btn btn-primary mb-3 btn btn-primary btn-block\" href=\"#\" role=\"button\" (click)=\"ok(); false\">\n        <i class=\"fa fa-plus\" aria-hidden=\"true\"></i> {{ 'designer.fixture-pool.create-template' | translate }}\n      </a>\n\n      <!-- Search for template -->\n      <input type=\"text\" class=\"form-control input-block mb-3\" id=\"searchSet\"\n        placeholder=\"{{ 'designer.fixture-pool.search-templates' | translate }}\"\n        (input)=\"filterTemplates($event.target.value)\">\n\n      <!-- Templates -->\n      <div class=\"card border-secondary\" style=\"height: 200px;\">\n        <div class=\"card-body p-0\">\n          <div class=\"list-group list-group-flush\">\n            <a *ngIf=\"loadingTemplates\"\n              class=\"list-group-item list-group-item-action flex-column align-items-start d-flex\">\n              <p class=\"mb-0 mx-auto\">\n                <i class=\"fa fa-spinner fa-pulse fa-fw\"></i>\n              </p>\n            </a>\n\n            <div class=\"list-group-item\" *ngFor=\"let template of filteredTemplates\">\n              <div class=\"row\">\n                <div class=\"col-10 col-auto my-auto\">\n                  <p class=\"mb-0\">{{ template.manufacturerName }} - {{ template.name }}</p>\n                </div>\n                <div class=\"col-2 my-auto\">\n                  <a class=\"btn btn-primary btn-sm float-right\" href=\"#\" role=\"button\"\n                    (click)=\"addFixture(template); false\">\n                    <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <!-- Fixtures -->\n      <div class=\"form-group row\">\n        <label class=\"col-lg-2 col-form-label\">{{ 'designer.fixture-pool.universe' | translate }}</label>\n        <select class=\"custom-select\">\n          <option>Universe 1</option>\n        </select>\n      </div>\n      <div class=\"card border-secondary\" style=\"height: 300px;\">\n        <div class=\"card-body p-0\">\n          <div class=\"list-group list-group-flush\" [sortablejs]=\"fixturePool\">\n            <div class=\"list-group-item\" *ngFor=\"let fixture of fixturePool\"\n              [class.active]=\"fixture == selectedFixture\" (click)=\"selectedFixture = fixture\" style=\"cursor: pointer;\">\n              <div class=\"row\">\n                <div class=\"col-auto list-sort-handle my-auto\" style=\"cursor: move; cursor: -webkit-grabbing;\">\n                  <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"col-auto flex-grow pl-0 my-auto\">\n                  <p class=\"mb-0\">{{ fixture.name }}</p>\n                </div>\n                <div class=\"col-auto my-auto\">\n                  <a class=\"btn btn-primary btn-sm float-right\" href=\"#\" role=\"button\"\n                    (click)=\"removeFixture(fixture); false\">\n                    <i class=\"fa fa-minus\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row mt-3\">\n    <div class=\"col\">\n      <!-- Tab navigation -->\n      <ul class=\"nav nav-tabs mb-4\" id=\"myTab\" role=\"tablist\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" id=\"sets-tab\" data-toggle=\"tab\" href=\"#dmx\" role=\"tab\">\n            <i class=\"icon-ola\" aria-hidden=\"true\"></i> {{ 'designer.fixture-pool.dmx' | translate }}\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" id=\"compositions-tab\" data-toggle=\"tab\" href=\"#settings\" role=\"tab\">\n            <i class=\"fa fa-cog\" aria-hidden=\"true\"></i> {{ 'designer.fixture-pool.settings' | translate }}\n          </a>\n        </li>\n      </ul>\n\n      <!-- Tab content -->\n      <div class=\"tab-content\" id=\"myTabContent\">\n        <!-- DMX universe overview-->\n        <div class=\"tab-pane show active\" id=\"dmx\" role=\"tabpanel\">\n          <div class=\"form-group row\">\n            <div class=\"col-auto flex-grow\"></div>\n            <div class=\"col-lg-3 d-flex\">\n              <div class=\"form-check my-auto ml-auto\">\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"showChannelNumbers\" [ngModel]=\"showChannelNumbers\"\n                  (ngModelChange)=\"showChannelNumbers = $event\">\n                <label class=\"form-check-label\" for=\"showChannelNumbers\">Show channels</label>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <div *ngFor=\"let channel of dmxChannels; let i = index;\" class=\"dmx-channel\"\n              [class.dmx-channel-occupied]=\"channelOccupied(i)\"\n              [class.dmx-channel-occupied-start]=\"channelOccupiedStart(i)\"\n              [class.dmx-channel-occupied-end]=\"channelOccupiedEnd(i)\"\n              [class.dmx-channel-overlapped]=\"channelOverlapped(i)\" (mousedown)=\"channelMouseDown($event)\"\n              (mouseover)=\"channelMouseOver($event)\" [attr.data-index]=\"i\">\n              <div class=\"d-flex w-100 dmx-channel-text\" [attr.data-index]=\"i\"\n                [class.dmx-channel-text-visible]=\"showChannelNumbers\">\n                <div class=\"m-auto\" style=\"font-size: 11px\" [attr.data-index]=\"i\"><small\n                    [attr.data-index]=\"i\">{{ (i + 1) }}</small>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Fixture settings -->\n        <div class=\"tab-pane\" id=\"settings\" role=\"tabpanel\">\n          <div *ngIf=\"selectedFixture && fixtureService.getTemplateByFixture(selectedFixture)\">\n\n            <div class=\"form-group row\">\n              <label class=\"col-lg-3 col-form-label\"\n                for=\"fixtureName\">{{ 'designer.fixture-pool.fixture-name' | translate }}</label>\n              <div class=\"col-lg-9 d-flex\">\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"selectedFixture.name\" maxlength=\"200\"\n                  id=\"fixtureName\">\n              </div>\n            </div>\n\n            <div class=\"form-group row\">\n              <label class=\"col-lg-3 col-form-label\">{{ 'designer.fixture-pool.mode' | translate }}</label>\n              <div class=\"col-lg-9 d-flex\">\n                <select class=\"custom-select\" [ngModel]=\"selectedFixture.modeShortName\"\n                  (ngModelChange)=\"selectedFixture.modeShortName = $event\">\n                  <option *ngFor=\"let mode of fixtureService.getTemplateByFixture(selectedFixture).modes\"\n                    [ngValue]=\"mode.shortName\">\n                    {{ mode.name }} - {{ mode.channels.length }} {{ 'designer.fixture-pool.channels' | translate }}\n                  </option>\n                </select>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <a class=\"mr-3 my-auto\" href=\"#\" role=\"button\" (click)=\"cancel(); false\">\n    {{ 'designer.misc.cancel' | translate }}\n  </a>\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"ok()\">{{ 'designer.misc.ok' | translate }}</button>\n</div>","styles":[".dmx-channel{display:flex;float:left;width:28px;border:1px solid #fff;margin-left:-1px;margin-bottom:-1px;padding-bottom:2px}.dmx-channel-text{opacity:0}.dmx-channel-text-visible{opacity:1}.dmx-channel-occupied{background-color:#63462e;border-left:none;border-right:none;cursor:move}.dmx-channel-occupied-start{border-left:1px solid #fff;border-top-left-radius:8px;border-bottom-left-radius:8px}.dmx-channel-occupied-end{border-right:1px solid #fff;border-top-right-radius:8px;border-bottom-right-radius:8px}.dmx-channel-overlapped{background-color:red;border:1px solid red;cursor:move}.card{overflow:auto}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap","name":"BsModalRef","line":197,"character":23},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵc"}]}],"ngOnInit":[{"__symbolic":"method"}],"filterTemplates":[{"__symbolic":"method"}],"getNextFreeDmxChannel":[{"__symbolic":"method"}],"addFixture":[{"__symbolic":"method"}],"removeFixture":[{"__symbolic":"method"}],"channelOccupied":[{"__symbolic":"method"}],"channelOccupiedStart":[{"__symbolic":"method"}],"channelOccupiedEnd":[{"__symbolic":"method"}],"channelOverlapped":[{"__symbolic":"method"}],"channelMouseDown":[{"__symbolic":"method"}],"mouseUp":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":372,"character":3},"arguments":["window:mouseup",["$event"]]}]}],"channelMouseOver":[{"__symbolic":"method"}],"ok":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}]}},"ɵy":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"app-preset","template":"<div class=\"card border-secondary h-100 panel\">\n  <div class=\"card-header d-flex\">\n    <div>\n      Presets\n    </div>\n    <div class=\"ml-auto\">\n      <a href=\"#\" class=\"btn btn-secondary m-0, p-0\" (click)=\"removePreset(); false;\"><i class=\"fa fa-minus-circle fa-fw\"\n          aria-hidden=\"true\"></i></a>\n      <a href=\"#\" class=\"btn btn-secondary m-0, p-0\" (click)=\"addPreset(); false;\"><i\n          class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i></a>\n    </div>\n  </div>\n\n  <div class=\"card-body h-100 p-0\">\n\n    <!-- List of presets -->\n    <div class=\"list-group\" [sortablejs]=\"projectService.project.presets\">\n      <div class=\"list-group-item\" *ngFor=\"let item of projectService.project.presets; let i = index\" (click)=\"selectPreset(i)\" \n        [class.active-light]=\"!presetService.previewPreset && item == presetService.selectedPreset\"\n        [class.active]=\"presetService.previewPreset && item == presetService.selectedPreset\"\n        [class.inactive-list-item]=\"!sceneService.presetIsSelected(item)\">\n        <div class=\"row d-flex\" style=\"cursor: pointer;\">\n          <div class=\"col-auto list-sort-handle my-auto\" style=\"cursor: move; cursor: -webkit-grabbing;\">\n            <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\n          </div>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"active\" [ngModel]=\"sceneService.presetIsSelected(item)\" (ngModelChange)=\"activatePreset($event, i)\" (click)=\"$event.stopPropagation();\">\n          </div>\n          <div>\n            {{ item.name }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵc"}]}],"ngOnInit":[{"__symbolic":"method"}],"selectPreset":[{"__symbolic":"method"}],"activatePreset":[{"__symbolic":"method"}],"addPreset":[{"__symbolic":"method"}],"removePreset":[{"__symbolic":"method"}]}},"ɵz":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"app-master-dimmer","template":"<div class=\"card border-secondary h-100\">\n\n  <div class=\"card-body h-100 d-flex\" style=\"flex-direction: column;\">\n    <div class=\"mb-3 w-100 d-flex\">\n        <i class=\"icon-dimmer m-auto\" style=\"font-size: 2em\"></i>\n    </div>\n\n    <div class=\"mb-4 w-100 d-flex\">\n      <input class=\"mx-auto\" type=\"text\" [ngModel]=\"getValue()\"\n        (ngModelChange)=\"setValue($event)\"\n        style=\"width: 42px; text-align: center; font-size: 12px; font-family: monospace;\">\n    </div>\n\n    <div class=\"h-100 w-100 d-flex\">\n      <mv-slider class=\"mx-auto\" [value]=\"masterDimmerService.masterDimmerValue\" (change)=\"setValue($event.newValue)\" [orientation]=\"'vertical'\"\n        [reversed]=\"true\" style=\"height: 100%;\" [tooltip]=\"'hide'\" [min]=\"0\" [max]=\"1\" [step]=\"0.001\"></mv-slider>\n    </div>\n\n  </div>\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":31,"character":31}]}],"ngOnInit":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}]}},"ɵba":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"app-fixture-capability-dimmer","template":"<div class=\"card border-secondary h-100\" [class.capability-deactivated]=\"getValue() == undefined\">\n  <div class=\"card-header\">\n    <div class=\"my-auto\">\n      <div class=\"form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"capabilityDimmerActive\" [ngModel]=\"getValue() != undefined\"\n          (ngModelChange)=\"changeActive($event)\">\n        <label class=\"form-check-label\" for=\"capabilityDimmerActive\">\n          <i class=\"icon-dimmer\"></i>\n        </label>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card-body h-100 d-flex\" style=\"flex-direction: column;\">\n    <div class=\"mb-4 w-100 d-flex\">\n      <input class=\"mx-auto\" type=\"text\" [ngModel]=\"getValue() || 255\" (ngModelChange)=\"setValue($event)\"\n        style=\"width: 30px; text-align: center; font-size: 12px; font-family: monospace;\">\n    </div>\n\n    <div class=\"h-100 w-100 d-flex\">\n      <mv-slider class=\"mx-auto\" [value]=\"getValue() || 255\" (change)=\"setValue($event.newValue)\" [orientation]=\"'vertical'\"\n        [reversed]=\"true\" style=\"height: 100%;\" [tooltip]=\"'hide'\" [min]=\"0\" [max]=\"255\" [step]=\"1\"></mv-slider>\n    </div>\n\n  </div>\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵbb"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":40,"character":31}]}],"ngOnInit":[{"__symbolic":"method"}],"getValue":[{"__symbolic":"method"}],"setValue":[{"__symbolic":"method"}],"changeActive":[{"__symbolic":"method"}]}},"ɵbb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"roundDmx":[{"__symbolic":"method"}],"getDmxFineValue1":[{"__symbolic":"method"}],"getDmxFineValue2":[{"__symbolic":"method"}],"isValidDmxValue":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵbc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"app-timeline-grid","template":"<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ 'designer.timeline.grid' | translate }}</h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n\n  <div class=\"form-group row\">\n    <label class=\"col-lg-4 col-form-label\">{{ 'designer.timeline.grid-type' | translate }}</label>\n    <div class=\"col-lg-8 d-flex\">\n      <select class=\"custom-select\" [ngModel]=\"timelineService.gridType\"\n        (ngModelChange)=\"timelineService.gridType = $event; updateGrid();\">\n        <option value=\"time\">{{ 'designer.timeline.grid-type-time-based' | translate }}</option>\n        <option value=\"musical\">{{ 'designer.timeline.grid-type-musical' | translate }}</option>\n      </select>\n    </div>\n  </div>\n\n  <div *ngIf=\"timelineService.gridType == 'musical'\" class=\"form-group row\">\n    <label class=\"col-lg-4 col-form-label\">{{ 'designer.timeline.beats-per-minute' | translate }}</label>\n    <div class=\"col-lg-8 d-flex\">\n      <input type=\"text\" class=\"form-control\" [ngModel]=\"timelineService.beatsPerMinute\"\n        (ngModelChange)=\"timelineService.beatsPerMinute = $event; updateGrid();\">\n    </div>\n  </div>\n\n  <div *ngIf=\"timelineService.gridType == 'musical'\" class=\"form-group row\">\n    <label class=\"col-lg-4 col-form-label\">{{ 'designer.timeline.time-signature' | translate }}</label>\n    <div class=\"col-lg-3 d-flex\">\n      <input type=\"text\" class=\"form-control\" [ngModel]=\"timelineService.timeSignatureUpper\"\n        (ngModelChange)=\"timelineService.timeSignatureUpper = $event; updateGrid();\">\n    </div>\n    <div class=\"col-lg-2 d-flex\"><span class=\"m-auto\">/</span></div>\n    <div class=\"col-lg-3 d-flex\">\n      <input type=\"text\" class=\"form-control\" [ngModel]=\"timelineService.timeSignatureLower\"\n        (ngModelChange)=\"timelineService.timeSignatureLower = $event; updateGrid();\">\n    </div>\n  </div>\n\n  <div class=\"form-group row\">\n    <label class=\"col-lg-4 col-form-label\"></label>\n    <div class=\"col-lg-8 d-flex\">\n      <div class=\"form-check\">\n        <input type=\"checkbox\" [ngModel]=\"timelineService.snapToGrid\"\n          (ngModelChange)=\"timelineService.snapToGrid = $event\" class=\"form-check-input\" id=\"snapToGrid\">\n\n        <label class=\"form-check-label\" for=\"snapToGrid\">\n          {{ 'designer.timeline.snap-to-grid' | translate }}\n        </label>\n      </div>\n    </div>\n  </div>\n\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap","name":"BsModalRef","line":66,"character":23},{"__symbolic":"reference","name":"ɵk"}]}],"ngOnInit":[{"__symbolic":"method"}],"updateGrid":[{"__symbolic":"method"}]}},"ɵbd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"app-composition-settings","template":"<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ composition.name }}</h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n\n  <div class=\"form-group row\">\n    <label class=\"col-lg-4 col-form-label\">{{ 'designer.timeline.composition-name' | translate }}</label>\n    <div class=\"col-lg-8 d-flex\">\n      <input type=\"text\" class=\"form-control\" [ngModel]=\"composition.name\" (ngModelChange)=\"composition.name = $event;\"\n        [typeahead]=\"existingCompositionNames\">\n    </div>\n  </div>\n\n  <div class=\"form-group row\">\n    <label class=\"col-lg-4 col-form-label\">{{ 'designer.timeline.composition-sync-type' | translate }}</label>\n    <div class=\"col-lg-8 d-flex\">\n      <select class=\"custom-select\" [ngModel]=\"composition.syncType\" (ngModelChange)=\"composition.syncType = $event\">\n        <option value=\"none\">{{ 'designer.timeline.composition-sync-type-none' | translate }}</option>\n        <option value=\"audio\">{{ 'designer.timeline.composition-sync-type-audio' | translate }}</option>\n      </select>\n    </div>\n  </div>\n\n</div>\n<div class=\"modal-footer\">\n  <a class=\"mr-3 my-auto\" href=\"#\" role=\"button\" (click)=\"cancel(); false\">\n    {{ 'designer.misc.cancel' | translate }}\n  </a>\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"ok()\">{{ 'designer.misc.ok' | translate }}</button>\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap","name":"BsModalRef","line":51,"character":23},{"__symbolic":"reference","name":"ɵk"}]}],"ngOnInit":[{"__symbolic":"method"}],"ok":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}]}}},"origins":{"DesignerService":"./lib/designer.service","DesignerComponent":"./lib/designer.component","DesignerModule":"./lib/designer.module","ɵa":"./lib/preview/preview.component","ɵb":"./lib/services/fixture.service","ɵc":"./lib/services/project.service","ɵd":"./lib/services/uuid.service","ɵe":"./lib/services/preview-mesh.service","ɵf":"./lib/services/animation.service","ɵg":"./lib/services/preview.service","ɵh":"./lib/services/preset.service","ɵi":"./lib/services/effect.service","ɵj":"./lib/services/scene.service","ɵk":"./lib/services/timeline.service","ɵl":"./lib/services/universe.service","ɵm":"./lib/services/master-dimmer.service","ɵn":"./lib/timeline/timeline.component","ɵo":"./lib/effect/effect-curve/effect-curve.component","ɵp":"./lib/effect/effect-pan-tilt/effect-pan-tilt.component","ɵq":"./lib/scene/scene.component","ɵr":"./lib/fixture/fixture-capability/fixture-capability-color/fixture-capability-color.component","ɵs":"./lib/fixture/fixture.component","ɵt":"./lib/fixture/fixture-settings/fixture-settings-position/fixture-settings-position.component","ɵu":"./lib/fixture/fixture-capability/fixture-capability.component","ɵv":"./lib/fixture/fixture-settings/fixture-settings.component","ɵw":"./lib/effect/effect.component","ɵx":"./lib/fixture-pool/fixture-pool.component","ɵy":"./lib/preset/preset.component","ɵz":"./lib/master-dimmer/master-dimmer.component","ɵba":"./lib/fixture/fixture-capability/fixture-capability-dimmer/fixture-capability-dimmer.component","ɵbb":"./lib/services/dmx.service","ɵbc":"./lib/timeline/timeline-grid/timeline-grid.component","ɵbd":"./lib/timeline/composition-settings/composition-settings.component"},"importAs":"@rocketshow/designer"}